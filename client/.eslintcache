[{"D:\\React.projects\\stel\\racks\\src\\index.js":"1","D:\\React.projects\\stel\\racks\\src\\App.js":"2","D:\\React.projects\\stel\\racks\\src\\reportWebVitals.js":"3","D:\\React.projects\\stel\\racks\\src\\components\\Header.js":"4","D:\\React.projects\\stel\\racks\\src\\components\\TestNodeMailer.js":"5","D:\\React.projects\\stel\\racks\\src\\pages\\Racks.js":"6","D:\\React.projects\\stel\\racks\\src\\components\\QuantitySlider.js":"7","D:\\React.projects\\stel\\racks\\src\\components\\InputsField.js":"8","D:\\React.projects\\stel\\racks\\src\\components\\Total.js":"9","D:\\React.projects\\stel\\racks\\src\\helpers.js":"10","D:\\React.projects\\stel\\racks\\src\\products\\racks.js":"11","D:\\React.projects\\stel\\racks\\src\\components\\CalcRadioInput.js":"12","D:\\React.projects\\stel\\racks\\src\\services\\MailService.js":"13","D:\\React.projects\\stel\\racks\\src\\components\\Popup.js":"14","D:\\React.projects\\stel\\racks\\src\\components\\OrderForm.js":"15","D:\\React.projects\\stel\\racks\\src\\components\\SuccessOrder.js":"16"},{"size":333,"mtime":1607583049546,"results":"17","hashOfConfig":"18"},{"size":1144,"mtime":1608169245026,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":1600,"mtime":1607590400635,"results":"21","hashOfConfig":"18"},{"size":1685,"mtime":1608173665457,"results":"22","hashOfConfig":"18"},{"size":5948,"mtime":1608288574730,"results":"23","hashOfConfig":"18"},{"size":718,"mtime":1608007099980,"results":"24","hashOfConfig":"18"},{"size":872,"mtime":1608028371372,"results":"25","hashOfConfig":"18"},{"size":977,"mtime":1608284948069,"results":"26","hashOfConfig":"18"},{"size":2421,"mtime":1608265684713,"results":"27","hashOfConfig":"18"},{"size":3592,"mtime":1608031041242,"results":"28","hashOfConfig":"18"},{"size":527,"mtime":1608008253669,"results":"29","hashOfConfig":"18"},{"size":285,"mtime":1608271092266,"results":"30","hashOfConfig":"18"},{"size":787,"mtime":1608288012349,"results":"31","hashOfConfig":"18"},{"size":1006,"mtime":1608284477127,"results":"32","hashOfConfig":"18"},{"size":271,"mtime":1608288108993,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1jsp4xw",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\React.projects\\stel\\racks\\src\\index.js",[],["69","70","71","72","73"],"D:\\React.projects\\stel\\racks\\src\\App.js",[],"D:\\React.projects\\stel\\racks\\src\\reportWebVitals.js",[],"D:\\React.projects\\stel\\racks\\src\\components\\Header.js",[],"D:\\React.projects\\stel\\racks\\src\\components\\TestNodeMailer.js",["74","75","76"],"import React from 'react';\r\nimport nodemailer from 'nodemailer';\r\n\r\nconst TestNodeMailer = () => {\r\n  // async..await is not allowed in global scope, must use a wrapper\r\n  async function main() {\r\n    // Generate test SMTP service account from ethereal.email\r\n    // Only needed if you don't have a real mail account for testing\r\n    // const testAccount = await nodemailer.createTestAccount();\r\n\r\n    // create reusable transporter object using the default SMTP transport\r\n    const transporter = nodemailer.createTransport({\r\n      host: 'smtp.beget.com',\r\n      port: 2525,\r\n      secure: false, // true for 465, false for other ports\r\n      auth: {\r\n        user: 'krl@skydescent.su', // generated ethereal user\r\n        pass: 'zVe44N@ULG7NyCT', // generated ethereal password\r\n      },\r\n    });\r\n\r\n    // send mail with defined transport object\r\n    const info = await transporter.sendMail({\r\n      from: '\"Kirill üëª\" <krl@skydescent.su>', // sender address\r\n      to: 'kirill310587@mail.ru, skilineed@gmail.com', // list of receivers\r\n      subject: '–ü—Ä–∏–≤–µ—Ç ‚úî', // Subject line\r\n      text: '–ü—Ä–∏–≤–µ—Ç –º–∏—Ä?', // plain text body\r\n      html: '<b>–ü—Ä–∏–≤–µ—Ç –º–∏—Ä?</b>', // html body\r\n    });\r\n\r\n    console.log('Message sent: %s', info.messageId);\r\n    // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\r\n\r\n    // Preview only available when sending through an Ethereal account\r\n    console.log('Preview URL: %s', nodemailer.getTestMessageUrl(info));\r\n    // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\r\n  }\r\n\r\n  main().catch(console.error);\r\n\r\n  return <div>–¢–µ—Å—Ç NodeMailer</div>;\r\n};\r\n\r\nexport default TestNodeMailer;\r\n","D:\\React.projects\\stel\\racks\\src\\pages\\Racks.js",["77"],"import React, { useState } from 'react';\r\nimport InputsField from '../components/InputsField';\r\nimport QuantitySlider from '../components/QuantitySlider';\r\nimport Total from '../components/Total';\r\n\r\nimport {\r\n  getProductPropValues,\r\n  createActiveInputs,\r\n  calculateTotalPrice,\r\n  getValuesFromRackState,\r\n} from '../helpers';\r\n\r\nimport { sendMail } from '../services/MailService';\r\n\r\nimport { racksProps, initialRack } from '../products/racks';\r\n\r\nconst Racks = () => {\r\n  const [rackState, setRackState] = useState(initialRack);\r\n  const [orderState, setOrder] = useState({\r\n    phone: null,\r\n    email: null,\r\n    comment: null,\r\n    isOrderSend: false,\r\n  });\r\n\r\n  const handleInputChange = (propGroup, propName, value) => {\r\n    setRackState(prev => {\r\n      const newRack = { ...prev };\r\n      if (['installation', 'delivery', 'subDelivery'].includes(propGroup)) {\r\n        newRack[propGroup] = value;\r\n      } else {\r\n        const relatedProp = Object.keys(prev[propGroup]).filter(\r\n          relatedPropName => relatedPropName !== propName\r\n        )[0];\r\n\r\n        const newActiveInputs = createActiveInputs(\r\n          racksProps,\r\n          propGroup,\r\n          propName,\r\n          value,\r\n          relatedProp\r\n        );\r\n\r\n        newRack[propGroup][propName].value = value;\r\n        newRack[propGroup][relatedProp].active = newActiveInputs;\r\n      }\r\n      newRack.total = calculateTotalPrice(newRack, racksProps);\r\n      return newRack;\r\n    });\r\n  };\r\n\r\n  const handleQuantitySliderMove = (propGroup, value) => {\r\n    setRackState(prev => {\r\n      const newRack = { ...prev };\r\n      newRack[propGroup] = value;\r\n      newRack.total = calculateTotalPrice(newRack, racksProps);\r\n      return newRack;\r\n    });\r\n  };\r\n\r\n  const handleSendOrderMail = e => {\r\n    e.preventDefault();\r\n\r\n    // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã –∑–∞–∫–∞–∑–∞\r\n    if (!orderState.phone && !orderState.email) {\r\n      alert('–ü–æ–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω –∏/–∏–ª–∏ –ø–æ—á—Ç–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã!');\r\n      return;\r\n    }\r\n    const rackValues = getValuesFromRackState(rackState);\r\n    if (rackValues.delivery === 'self_delivery') {\r\n      rackValues.subDelivery = '';\r\n    }\r\n    const data = { ...orderState, ...rackValues };\r\n\r\n    sendMail(data).then(response => {\r\n      if (response.result === 'success') {\r\n        setOrder(() => ({\r\n          email: null,\r\n          phone: null,\r\n          comment: null,\r\n          isOrderSend: true,\r\n        }));\r\n        setTimeout(() => {\r\n          setOrder(() => ({\r\n            email: null,\r\n            phone: null,\r\n            comment: null,\r\n            isOrderSend: false,\r\n          }));\r\n        }, 3000);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleFormChange = e => {\r\n    setOrder(prev => {\r\n      const newOrder = { ...prev };\r\n      newOrder[e.target.name] = e.target.value;\r\n      return newOrder;\r\n    });\r\n  };\r\n\r\n  const renderInputsField = (propGroup, propName, title) => {\r\n    const propValues = getProductPropValues(racksProps[propGroup], propName);\r\n\r\n    let activeInputs = null;\r\n    let currentValue = rackState[propGroup];\r\n\r\n    if (\r\n      rackState[propGroup][propName] &&\r\n      rackState[propGroup][propName].value &&\r\n      rackState[propGroup][propName].active\r\n    ) {\r\n      currentValue = rackState[propGroup][propName].value;\r\n      activeInputs = rackState[propGroup][propName].active;\r\n    }\r\n\r\n    return (\r\n      <InputsField\r\n        title={title}\r\n        propGroup={propGroup}\r\n        propName={propName}\r\n        propValues={propValues}\r\n        activeInputs={activeInputs}\r\n        currentValue={currentValue}\r\n        handleInputChange={handleInputChange}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderQuantitySliderMove = (title, min, max, step, name, propGroup) => {\r\n    const currentValue = rackState[propGroup];\r\n    return (\r\n      <QuantitySlider\r\n        title={title}\r\n        min={min}\r\n        max={max}\r\n        step={step}\r\n        name={name}\r\n        handleQuantitySliderMove={handleQuantitySliderMove}\r\n        propGroup={propGroup}\r\n        currentValue={currentValue}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"calc-bg\">\r\n        <div className=\"calc\">\r\n          <div>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</div>\r\n          <div>\r\n            {renderInputsField('rack', 'height', '–í—ã—Å–æ—Ç–∞ —Å—Ç–µ–ª–ª–∞–∂–∞, —Å–º')}\r\n            {renderInputsField('shelf', 'depth', '–ì–ª—É–±–∏–Ω–∞ –ø–æ–ª–∫–∏ —Å–º')}\r\n            {renderInputsField('shelf', 'width', '–®–∏—Ä–∏–Ω–∞ –ø–æ–ª–∫–∏, —Å–º')}\r\n            {renderInputsField('rack', 'load', '–ù–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å—Ç–µ–ª–ª–∞–∂, –∫–≥')}\r\n            <div className=\"flex grid_2 range\">\r\n              {renderQuantitySliderMove(\r\n                '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–æ–∫',\r\n                2,\r\n                10,\r\n                1,\r\n                'shelf',\r\n                'shelvesQuantity'\r\n              )}\r\n              {renderQuantitySliderMove(\r\n                '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–µ–ª–ª–∞–∂–µ–π',\r\n                1,\r\n                10,\r\n                1,\r\n                'rack',\r\n                'racksQuantity'\r\n              )}\r\n            </div>\r\n            <div className=\"total\">\r\n              <Total\r\n                total={rackState.total}\r\n                deliveryType={rackState.delivery}\r\n                handleSendOrderMail={handleSendOrderMail}\r\n                handleFormChange={handleFormChange}\r\n                isOrderSend={orderState.isOrderSend}\r\n              />\r\n              {renderInputsField('delivery', 'type', '–î–æ—Å—Ç–∞–≤–∫–∞')}\r\n              {rackState.delivery === 'self_delivery' ||\r\n                renderInputsField('subDelivery', 'type', '')}\r\n              {renderInputsField('installation', 'type', '–°–±–æ—Ä–∫–∞')}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section>–í—Ç–æ—Ä–æ–π –±–ª–æ–∫</section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Racks;\r\n","D:\\React.projects\\stel\\racks\\src\\components\\QuantitySlider.js",[],"D:\\React.projects\\stel\\racks\\src\\components\\InputsField.js",[],"D:\\React.projects\\stel\\racks\\src\\components\\Total.js",[],"D:\\React.projects\\stel\\racks\\src\\helpers.js",[],"D:\\React.projects\\stel\\racks\\src\\products\\racks.js",[],"D:\\React.projects\\stel\\racks\\src\\components\\CalcRadioInput.js",[],"D:\\React.projects\\stel\\racks\\src\\services\\MailService.js",[],"D:\\React.projects\\stel\\racks\\src\\components\\Popup.js",[],"D:\\React.projects\\stel\\racks\\src\\components\\OrderForm.js",[],"D:\\React.projects\\stel\\racks\\src\\components\\SuccessOrder.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":31,"column":5,"nodeType":"90","messageId":"91","endLine":31,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":35,"column":5,"nodeType":"90","messageId":"91","endLine":35,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":39,"column":16,"nodeType":"90","messageId":"91","endLine":39,"endColumn":29},{"ruleId":"92","severity":1,"message":"93","line":66,"column":7,"nodeType":"94","messageId":"91","endLine":66,"endColumn":63},"lines-around-directive",["95"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","no-alert","Unexpected alert.","CallExpression","padding-line-between-statements"]